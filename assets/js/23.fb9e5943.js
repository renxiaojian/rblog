(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{439:function(s,n,a){"use strict";a.r(n);var r=a(21),t=Object(r.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目"}},[s._v("#")]),s._v(" 1 题目")]),s._v(" "),a("p",[s._v("有一个整数数组，请你根据快速排序的思路，找出数组中第K大的数。")]),s._v(" "),a("p",[s._v("给定一个整数数组arr,同时给定它的大小n和要找的K(1<=K<=n)，请返回第K大的数(包括重复的元素，不用去重)，保证答案存在。")]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：[10,10,9,9,8,7,5,6,4,3,4,2],12,3\n返回值：9\n说明：去重后的第3大是8，但本题要求包含重复的元素，不用去重，所以输出9\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_2-题解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-题解"}},[s._v("#")]),s._v(" 2 题解")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function findKth(arr, n, K) {\n    var quickSort = function (arr) {\n        console.log('arr============', arr)\n        if (arr.length <= 1) {//如果数组长度小于等于1无需判断直接返回即可 \n            return arr;\n        }\n        var pivotIndex = Math.floor(arr.length / 2);//取基准点 \n        var pivot = arr.splice(pivotIndex, 1)[0];//取基准点的值,splice(index,1)函数可以返回数组中被删除的那个数\n        var left = [];//存放比基准点小的数组\n        var right = [];//存放比基准点大的数组 \n        for (var i = 0; i < arr.length; i++) { //遍历数组，进行判断分配 \n            if (arr[i] < pivot) {\n                left.push(arr[i]);//比基准点小的放在左边数组 \n            } else {\n                right.push(arr[i]);//比基准点大的放在右边数组 \n            }\n        }\n        let result = quickSort(left).concat([pivot], quickSort(right))\n        //递归执行以上操作,对左右两个数组进行操作，直到数组长度为<=1； \n        return result;\n    }\n    return quickSort(arr)[n - K]\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);